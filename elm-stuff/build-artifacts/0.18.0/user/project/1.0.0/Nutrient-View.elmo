var _user$project$Nutrient_View$nutrientTitle = function (nutrient) {
	return A2(
		_elm_lang$core$Basics_ops['++'],
		nutrient.name,
		A2(
			_elm_lang$core$Basics_ops['++'],
			' (',
			A2(
				_elm_lang$core$Basics_ops['++'],
				A2(_myrho$elm_round$Round$round, 2, nutrient.amount),
				A2(
					_elm_lang$core$Basics_ops['++'],
					' / ',
					A2(
						_elm_lang$core$Basics_ops['++'],
						_elm_lang$core$Basics$toString(nutrient.dailyIntake),
						A2(_elm_lang$core$Basics_ops['++'], nutrient.unitOfMeasure, ')'))))));
};
var _user$project$Nutrient_View$getPercentageColour = function (percentage) {
	return (_elm_lang$core$Native_Utils.cmp(percentage, 20) < 1) ? _user$project$AppCss$nutrientLow : ((_elm_lang$core$Native_Utils.cmp(percentage, 50) < 1) ? _user$project$AppCss$nutrientMedium : ((_elm_lang$core$Native_Utils.cmp(percentage, 80) < 1) ? _user$project$AppCss$nutrientHigh : _user$project$AppCss$nutrientFull));
};
var _user$project$Nutrient_View$_p0 = _rtfeldman$elm_css_helpers$Html_CssHelpers$withNamespace('');
var _user$project$Nutrient_View$id = _user$project$Nutrient_View$_p0.id;
var _user$project$Nutrient_View$class = _user$project$Nutrient_View$_p0.$class;
var _user$project$Nutrient_View$classList = _user$project$Nutrient_View$_p0.classList;
var _user$project$Nutrient_View$nutrientProgress = F5(
	function (config, isHovered, nutrientPopovers, modalState, nutrient) {
		var popoverTitle = _user$project$Nutrient_View$nutrientTitle(nutrient);
		var nutrientPopover = A2(
			_elm_lang$core$Maybe$withDefault,
			_rundis$elm_bootstrap$Bootstrap_Popover$initialState,
			A2(_elm_lang$core$Dict$get, nutrient.id, nutrientPopovers));
		var percentage = A2(_user$project$Helpers$getPercentage, nutrient.amount, nutrient.dailyIntake);
		var percentageColour = isHovered ? 'lightgray' : _user$project$Nutrient_View$getPercentageColour(percentage);
		var hoverPercentage = A2(_user$project$Helpers$getPercentage, nutrient.hoveredAmount, nutrient.dailyIntake);
		var percentageToDisplay = (_elm_lang$core$Native_Utils.cmp(hoverPercentage, 0) > 0) ? hoverPercentage : percentage;
		var hoverWidth = (_elm_lang$core$Native_Utils.cmp(hoverPercentage, 100) > 0) ? 100 : hoverPercentage;
		var percentageWidth = (_elm_lang$core$Native_Utils.cmp(percentage, 100) > 0) ? (100 - hoverWidth) : (percentage - hoverWidth);
		var displayColour = (_elm_lang$core$Native_Utils.cmp(hoverWidth, 0) > 0) ? '#b13fb8' : (isHovered ? 'lightgray' : percentageColour);
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _user$project$Nutrient_View$class(
					{
						ctor: '::',
						_0: _user$project$AppCss$NutrientProgress,
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(
						A2(config.onClick, nutrient.id, _rundis$elm_bootstrap$Bootstrap_Modal$visibleState)),
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_rundis$elm_bootstrap$Bootstrap_Popover$view,
					nutrientPopover,
					A3(
						_rundis$elm_bootstrap$Bootstrap_Popover$content,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$p,
								{
									ctor: '::',
									_0: _user$project$Nutrient_View$class(
										{
											ctor: '::',
											_0: _user$project$AppCss$PopoverText,
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text(nutrient.description),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						},
						A3(
							_rundis$elm_bootstrap$Bootstrap_Popover$title,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$style(
									{
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: 'background-color', _1: percentageColour},
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(popoverTitle),
								_1: {ctor: '[]'}
							},
							_rundis$elm_bootstrap$Bootstrap_Popover$left(
								_rundis$elm_bootstrap$Bootstrap_Popover$config(
									A2(
										_elm_lang$html$Html$div,
										A2(
											_rundis$elm_bootstrap$Bootstrap_Popover$onHover,
											nutrientPopover,
											config.onHover(nutrient.id)),
										{
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$div,
												{ctor: '[]'},
												{
													ctor: '::',
													_0: A2(
														_elm_lang$html$Html$span,
														{ctor: '[]'},
														{
															ctor: '::',
															_0: _elm_lang$html$Html$text(nutrient.name),
															_1: {ctor: '[]'}
														}),
													_1: {ctor: '[]'}
												}),
											_1: {
												ctor: '::',
												_0: _rundis$elm_bootstrap$Bootstrap_Progress$progressMulti(
													{
														ctor: '::',
														_0: {
															ctor: '::',
															_0: _rundis$elm_bootstrap$Bootstrap_Progress$value(hoverWidth),
															_1: {
																ctor: '::',
																_0: _rundis$elm_bootstrap$Bootstrap_Progress$attr(
																	_elm_lang$html$Html_Attributes$style(
																		{
																			ctor: '::',
																			_0: {ctor: '_Tuple2', _0: 'background-color', _1: '#b13fb8'},
																			_1: {ctor: '[]'}
																		})),
																_1: {ctor: '[]'}
															}
														},
														_1: {
															ctor: '::',
															_0: {
																ctor: '::',
																_0: _rundis$elm_bootstrap$Bootstrap_Progress$value(percentageWidth),
																_1: {
																	ctor: '::',
																	_0: _rundis$elm_bootstrap$Bootstrap_Progress$attr(
																		_elm_lang$html$Html_Attributes$style(
																			{
																				ctor: '::',
																				_0: {ctor: '_Tuple2', _0: 'background-color', _1: percentageColour},
																				_1: {ctor: '[]'}
																			})),
																	_1: {ctor: '[]'}
																}
															},
															_1: {ctor: '[]'}
														}
													}),
												_1: {ctor: '[]'}
											}
										})))))),
				_1: {ctor: '[]'}
			});
	});
var _user$project$Nutrient_View$nutrientSection = F6(
	function (config, category, foodIsHovered, nutrientPopovers, modalState, nutrients) {
		return A2(
			_rundis$elm_bootstrap$Bootstrap_Grid$row,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(
					_rundis$elm_bootstrap$Bootstrap_Grid$col,
					{ctor: '[]'},
					A2(
						_elm_lang$core$Basics_ops['++'],
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$h2,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text(category),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						},
						A2(
							_elm_lang$core$List$map,
							A4(_user$project$Nutrient_View$nutrientProgress, config, foodIsHovered, nutrientPopovers, modalState),
							nutrients))),
				_1: {ctor: '[]'}
			});
	});
var _user$project$Nutrient_View$NutrientProgressConfig = F2(
	function (a, b) {
		return {onHover: a, onClick: b};
	});
